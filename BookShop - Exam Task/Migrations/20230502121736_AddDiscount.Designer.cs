// <auto-generated />
using System;
using BookShop.DatabaseData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookShop.Migrations
{
    [DbContext(typeof(BookShopDbContext))]
    [Migration("20230502121736_AddDiscount")]
    partial class AddDiscount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookShop.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Stephen",
                            Surname = "King"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Agatha",
                            Surname = "Christie"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Henric",
                            Surname = "Middle"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Jenna",
                            Surname = "Taylor"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Matthew",
                            Surname = "Smith"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Vanessa",
                            Surname = "Mint"
                        },
                        new
                        {
                            Id = 7,
                            Name = "George",
                            Surname = "Print"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Nicolas",
                            Surname = "Thick"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Momo",
                            Surname = "Mimi"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Josuke",
                            Surname = "Jos"
                        });
                });

            modelBuilder.Entity("BookShop.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("GenreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("PagesCount")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("PublisherId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            GenreId = 2,
                            PagesCount = 850,
                            Price = 20,
                            PublisherId = 1,
                            Title = "It",
                            Year = 1985
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            GenreId = 3,
                            PagesCount = 240,
                            Price = 18,
                            PublisherId = 2,
                            Title = "Puarot",
                            Year = 1987
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            GenreId = 4,
                            PagesCount = 315,
                            Price = 12,
                            PublisherId = 3,
                            Title = "Wolf in the Dark",
                            Year = 2000
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 6,
                            GenreId = 5,
                            PagesCount = 378,
                            Price = 23,
                            PublisherId = 1,
                            Title = "Beans in the Soup",
                            Year = 2004
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 4,
                            GenreId = 4,
                            PagesCount = 293,
                            Price = 11,
                            PublisherId = 2,
                            Title = "Queens and Kings",
                            Year = 1999
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 8,
                            GenreId = 1,
                            PagesCount = 280,
                            Price = 25,
                            PublisherId = 3,
                            Title = "Adventures of Simon and His Friends",
                            Year = 2010
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 9,
                            GenreId = 3,
                            PagesCount = 277,
                            Price = 31,
                            PublisherId = 1,
                            Title = "Winds and Clouds",
                            Year = 2011
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 7,
                            GenreId = 5,
                            PagesCount = 402,
                            Price = 24,
                            PublisherId = 2,
                            Title = "Always There",
                            Year = 2013
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 10,
                            GenreId = 6,
                            PagesCount = 516,
                            Price = 29,
                            PublisherId = 3,
                            Title = "Do Not Cross The Road",
                            Year = 2017
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            GenreId = 3,
                            PagesCount = 264,
                            Price = 30,
                            PublisherId = 2,
                            Title = "Beeps and Bops",
                            Year = 2002
                        });
                });

            modelBuilder.Entity("BookShop.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Detective"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Documentary"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Horror"
                        });
                });

            modelBuilder.Entity("BookShop.Entities.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Penguin Random House"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Macmillan"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Simon & Schuster"
                        });
                });

            modelBuilder.Entity("BookShop.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "Anastasia",
                            Password = "0000"
                        },
                        new
                        {
                            Id = 2,
                            Login = "Manager",
                            Password = "1111"
                        });
                });

            modelBuilder.Entity("BookShop.Entities.Book", b =>
                {
                    b.HasOne("BookShop.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookShop.Entities.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookShop.Entities.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Genre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("BookShop.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookShop.Entities.Genre", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookShop.Entities.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
